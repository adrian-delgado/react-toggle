(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"./src/components/Toggle/index.tsx":function(e,n,o){"use strict";var t=o("./node_modules/react/index.js"),r=o.n(t),l=o("./node_modules/styled-components/dist/styled-components.browser.esm.js"),a=o("./src/theme/theme.ts");function i(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)o=l[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)o=l[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}function u(){var e=c(["\n  position: relative;\n  box-sizing: border-box;\n  display: inline-grid;\n  align-items: center;\n  width: ",";\n  height: ",';\n  vertical-align: text-top;\n  margin: 0 4px;\n\n  input[type="checkbox"] {\n    position: absolute;\n    margin-left: -9999px;\n    visibility: hidden;\n\n    // off state\n    & + label {\n      display: inline-grid;\n      box-sizing: border-box;\n      align-items: center;\n      outline: none;\n      user-select: none;\n      width: ',";\n      height: ",";\n      background-color: ",";\n      border-radius: ",';\n      cursor: pointer;\n      transition: background ease-out 0.3s;\n\n      &:before {\n        content: "";\n        display: block;\n        position: absolute;\n        border-radius: ',";\n        width: calc(\n          "," - 2 *\n            ","\n        );\n        height: calc(\n          "," - 2 *\n            ","\n        );\n        background-color: ",";\n        left: ",';\n      }\n\n      &:after {\n        display: block;\n        position: absolute;\n        content: "";\n        width: ',";\n        height: ",";\n        border-radius: ",";\n        background-color: ",";\n        transition: all ease-out 0.4s;\n        margin-left: ",";\n      }\n    }\n\n    // on state\n    &:checked {\n      & + label {\n        background-color: ",";\n\n        &:before {\n          background-color: ",";\n        }\n\n        &:after {\n          margin-left: calc(\n            100% - "," -\n              ","\n          );\n          transition: all ease-out 0.2s;\n          background-color: ",";\n        }\n      }\n\n      &:disabled {\n        & + label {\n          background-color: ",";\n          &:after {\n            box-shadow: none;\n          }\n        }\n      }\n    }\n\n    // disabled\n    &:disabled {\n      & + label {\n        background-color: ",";\n        cursor: default;\n        &:after {\n          box-shadow: none;\n          background-color: ",";\n        }\n      }\n    }\n  }\n"]);return u=function(){return e},e}function d(){var e=c([""]);return d=function(){return e},e}function c(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var s=l.b.label(d()),g=l.b.span(u(),function(e){return e.width||e.theme&&e.theme.width||a.a.width},function(e){return e.height||e.theme&&e.theme.height||a.a.height},function(e){return e.width||e.theme&&e.theme.width||a.a.width},function(e){return e.height||e.theme&&e.theme.height||a.a.height},function(e){return e.borderColor||e.leftBorderColor||e.theme&&e.theme.leftBorderColor||a.a.leftBorderColor},function(e){return e.radius||e.theme&&e.theme.radius||a.a.radius},function(e){return e.radiusBackground||e.theme&&e.theme.radiusBackground||a.a.radiusBackground},function(e){return e.width||e.theme&&e.theme.width||a.a.width},function(e){return e.borderWidth||e.theme&&e.theme.borderWidth||a.a.borderWidth},function(e){return e.height||e.theme&&e.theme.height||a.a.height},function(e){return e.borderWidth||e.theme&&e.theme.borderWidth||a.a.borderWidth},function(e){return e.backgroundColor||e.leftBackgroundColor||e.theme&&e.theme.leftBackgroundColor||a.a.leftBackgroundColor},function(e){return e.borderWidth||e.theme&&e.theme.borderWidth||a.a.borderWidth},function(e){return e.knobWidth||e.theme&&e.theme.knobWidth||a.a.knobWidth},function(e){return e.knobHeight||e.theme&&e.theme.knobHeight||a.a.knobHeight},function(e){return e.knobRadius||e.theme&&e.theme.knobRadius||a.a.knobRadius},function(e){return e.knobColor||e.leftKnobColor||e.theme&&e.theme.leftKnobColor||a.a.leftKnobColor},function(e){return e.knobGap||e.theme&&e.theme.knobGap||a.a.knobGap},function(e){return e.borderColor||e.rightBorderColor||e.theme&&e.theme.rightBorderColor||a.a.rightBorderColor},function(e){return e.backgroundColor||e.rightBackgroundColor||e.theme&&e.theme.rightBackgroundColor||a.a.rightBackgroundColor},function(e){return e.knobWidth||e.theme&&e.theme.knobWidth||a.a.knobWidth},function(e){return e.knobGap||e.theme&&e.theme.knobGap||a.a.knobGap},function(e){return e.knobColor||e.rightKnobColor||e.theme&&e.theme.rightKnobColor||a.a.rightKnobColor},function(e){return e.backgroundColorDisabled||e.theme&&e.theme.backgroundColorDisabled||a.a.backgroundColorDisabled},function(e){return e.backgroundColorDisabled||e.theme&&e.theme.backgroundColorDisabled||a.a.backgroundColorDisabled},function(e){return e.backgroundColorDisabled||e.theme&&e.theme.backgroundColorDisabled||a.a.backgroundColorDisabled}),h=function(e){var n=Object(t.useRef)(null),o=e.className,l=e.name,a=e.checked,u=void 0!==a&&a,d=e.controlled,c=void 0!==d&&d,h=e.disabled,m=void 0!==h&&h,p=e.value,b=void 0===p?"":p,f=e.onToggle,k=void 0===f?function(){return!0}:f,y=e.onRight,C=void 0===y?function(){return!0}:y,w=e.onLeft,T=void 0===w?function(){return!0}:w,_=i(e,["className","name","checked","controlled","disabled","value","onToggle","onRight","onLeft"]),B=["react-toggle",o||""].join(" ");return r.a.createElement(g,Object.assign({className:B},_),r.a.createElement("input",Object.assign({ref:n,onChange:function(e){if(k){k(e);var n=e.target;n&&n.checked?C(e):T(e)}},type:"checkbox",id:l,name:l,value:b,disabled:m},function(e){return e?{checked:u}:{defaultChecked:u}}(c))),r.a.createElement(s,{htmlFor:l}))};n.a=h;try{h.displayName="Toggle",h.__docgenInfo={description:"",displayName:"Toggle",props:{className:{defaultValue:null,description:"Addition classes",name:"className",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"Name of checkbox. You should alway assign a name\n@requires true",name:"name",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Value used when you'll post data",name:"value",required:!1,type:{name:"string"}},checked:{defaultValue:{value:"false"},description:"State of checked",name:"checked",required:!1,type:{name:"boolean"}},controlled:{defaultValue:{value:"false"},description:"Controls whether the checked prop is controlled (passed to the `checked` prop on input) or not (passed to the `defautlChecked` prop on input)",name:"controlled",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"Disable the toogle",name:"disabled",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"Trigged when the toggle change\n@param e",name:"onToggle",required:!1,type:{name:"(e: any) => void"}},onRight:{defaultValue:null,description:"Trigged when the toggle is on the left.",name:"onRight",required:!1,type:{name:"(e: any) => void"}},onLeft:{defaultValue:null,description:"Trigged when the toggle is on the right.",name:"onLeft",required:!1,type:{name:"(e: any) => void"}},width:{defaultValue:null,description:"Width of component",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"Height of component",name:"height",required:!1,type:{name:"string"}},borderWidth:{defaultValue:null,description:"Border width",name:"borderWidth",required:!1,type:{name:"string"}},borderColor:{defaultValue:null,description:"Border color for both knob position. This props will override leftBorderColor and rightBorderColor props",name:"borderColor",required:!1,type:{name:"string"}},leftBorderColor:{defaultValue:null,description:"Border color when the knob is on the left (usually off)",name:"leftBorderColor",required:!1,type:{name:"string"}},rightBorderColor:{defaultValue:null,description:"Border color when the knob is on the right (usually on)",name:"rightBorderColor",required:!1,type:{name:"string"}},backgroundColor:{defaultValue:null,description:"Background color for both knob position. This props will override leftBackgroundColor and rightBackgroundColor props",name:"backgroundColor",required:!1,type:{name:"string"}},leftBackgroundColor:{defaultValue:null,description:"Background color when the knob is on the left (usually off)",name:"leftBackgroundColor",required:!1,type:{name:"string"}},rightBackgroundColor:{defaultValue:null,description:"Background color when the knob is on the right (usually on)",name:"rightBackgroundColor",required:!1,type:{name:"string"}},backgroundColorDisabled:{defaultValue:null,description:"Background color when the toggle is disabled",name:"backgroundColorDisabled",required:!1,type:{name:"string"}},radius:{defaultValue:null,description:"Radius of container",name:"radius",required:!1,type:{name:"string"}},radiusBackground:{defaultValue:null,description:"Radius of gap",name:"radiusBackground",required:!1,type:{name:"string"}},knobRadius:{defaultValue:null,description:"Border radius of knob",name:"knobRadius",required:!1,type:{name:"string"}},knobWidth:{defaultValue:null,description:"Knob width",name:"knobWidth",required:!1,type:{name:"string"}},knobHeight:{defaultValue:null,description:"Knob height",name:"knobHeight",required:!1,type:{name:"string"}},knobGap:{defaultValue:null,description:"Knob gap. It's the distance from the border/background",name:"knobGap",required:!1,type:{name:"string"}},knobColor:{defaultValue:null,description:"Knob color for both knob position. This props will override the leftKnobColor and rightKnobColor",name:"knobColor",required:!1,type:{name:"string"}},leftKnobColor:{defaultValue:null,description:"Knob color when it's on the left (usually off)",name:"leftKnobColor",required:!1,type:{name:"string"}},rightKnobColor:{defaultValue:null,description:"Knob color when it's on the right (usually on)",name:"rightKnobColor",required:!1,type:{name:"string"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Toggle/index.tsx#Toggle"]={docgenInfo:h.__docgenInfo,name:"Toggle",path:"src/components/Toggle/index.tsx#Toggle"})}catch(m){}},"./src/theme/theme.ts":function(e,n,o){"use strict";n.a={version:"1.0.0",width:"48px",height:"24px",borderWidth:"2px",borderColor:"#aaa",leftBorderColor:"#aaa",rightBorderColor:"#3887b7",leftBackgroundColor:"#fff",rightBackgroundColor:"#fff",backgroundColorDisabled:"#eee",radius:"256px",radiusBackground:"256px",knobRadius:"100%",knobWidth:"16px",knobHeight:"16px",knobGap:"4px",knobColor:"#aaa",leftKnobColor:"#aaa",rightKnobColor:"#3887b7"};try{theme.displayName="theme",theme.__docgenInfo={description:"Default theme settings.",displayName:"theme",props:{}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/theme/theme.ts#theme"]={docgenInfo:theme.__docgenInfo,name:"theme",path:"src/theme/theme.ts#theme"})}catch(t){}},"./srcdocs/components/Toggle/toggle.mdx":function(e,n,o){"use strict";o.r(n);var t=o("./node_modules/react/index.js"),r=o.n(t),l=o("./node_modules/@mdx-js/tag/dist/index.js"),a=o("./node_modules/docz/dist/index.m.js"),i=o("./src/components/Toggle/index.tsx"),u=o("./srcdocs/theme/theme.tsx");function d(){return t.createElement(u.b,null,t.createElement("h1",null,"Toggle Example"),t.createElement("p",null,t.createElement("label",{htmlFor:"toggle-b"},"Click me",t.createElement(i.a,{name:"toggle-b",onToggle:function(e){return console.log(e.target.checked)}}))))}function c(e){return(c="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)o=l[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)o=l[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}function g(e,n){for(var o=0;o<n.length;o++){var t=n[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function h(e,n){return!n||"object"!==c(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function p(e,n){return(p=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}o.d(n,"default",function(){return b});var b=function(e){function n(e){var o;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(o=h(this,m(n).call(this,e))).layout=null,o}var o,t,u;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&p(e,n)}(n,r.a.Component),o=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components,o=s(e,["components"]);return r.a.createElement(l.MDXTag,{name:"wrapper",components:n},r.a.createElement(l.MDXTag,{name:"h1",components:n,props:{id:"toggle"}},"Toggle"),r.a.createElement(l.MDXTag,{name:"p",components:n},"The Toggle component is an useful replacement to the standar input checkbox component.\nAnyway, remember that the toggle component is an extension of the input checkbox. So, you can use it inside a form as well.\nIn fact, remember to use the props ",r.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"name")," when you're using multiple toggle component in your view."),r.a.createElement(d,null),r.a.createElement(l.MDXTag,{name:"h2",components:n,props:{id:"props"}},"Props"),r.a.createElement(a.f,{of:i.a}),r.a.createElement(l.MDXTag,{name:"h2",components:n,props:{id:"playground"}},"Playground"),r.a.createElement(l.MDXTag,{name:"p",components:n},"Click on the button ",r.a.createElement(l.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<>")," on the right bottom of panel to edit your code."),r.a.createElement(a.e,{__position:2,__code:'<label htmlFor="toggle-1">\n  Left label\n  <Toggle name="toggle-1" />\n</label>',__scope:{props:this?this.props:o,Toggle:i.a,ToggleExample:d}},r.a.createElement("label",{htmlFor:"toggle-1"},"Left label",r.a.createElement(i.a,{name:"toggle-1"}))),r.a.createElement(l.MDXTag,{name:"p",components:n},"Right label"),r.a.createElement(a.e,{__position:3,__code:'<label htmlFor="toggle-2">\n  <Toggle name="toggle-2" />\n  Right label\n</label>',__scope:{props:this?this.props:o,Toggle:i.a,ToggleExample:d}},r.a.createElement("label",{htmlFor:"toggle-2"},r.a.createElement(i.a,{name:"toggle-2"}),"Right label")),r.a.createElement(a.e,{__position:4,__code:'<label htmlFor="toggle-3">\n  Disabled\n  <Toggle name="toggle-3" disabled />\n</label>',__scope:{props:this?this.props:o,Toggle:i.a,ToggleExample:d}},r.a.createElement("label",{htmlFor:"toggle-3"},"Disabled",r.a.createElement(i.a,{name:"toggle-3",disabled:!0}))),r.a.createElement(a.e,{__position:5,__code:'<label htmlFor="toggle-4">\n  <Toggle\n    leftBackgroundColor="tomato"\n    rightBackgroundColor="green"\n    borderColor="tomato"\n    knobColor="white"\n    name="toggle-4"\n    onToggle={e => console.log(\'onToggle\', e.target.checked)}\n  />\n  Right label\n</label>',__scope:{props:this?this.props:o,Toggle:i.a,ToggleExample:d}},r.a.createElement("label",{htmlFor:"toggle-4"},r.a.createElement(i.a,{leftBackgroundColor:"tomato",rightBackgroundColor:"green",borderColor:"tomato",knobColor:"white",name:"toggle-4",onToggle:function(e){return console.log("onToggle",e.target.checked)}}),"Right label")))}}])&&g(o.prototype,t),u&&g(o,u),n}()}}]);
//# sourceMappingURL=srcdocs-components-toggle-toggle.f3f0aa2a803c4a775cd9.js.map