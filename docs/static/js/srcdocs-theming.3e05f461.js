(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"./src/components/Toggle/index.tsx":function(e,n,o){"use strict";var t=o("./node_modules/react/index.js"),r=o.n(t),a=o("./node_modules/styled-components/dist/styled-components.browser.esm.js"),i=o("./src/theme/theme.ts");function l(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}function d(){var e=u(["\n  position: relative;\n  box-sizing: border-box;\n  display: inline-grid;\n  align-items: center;\n  width: ",";\n  height: ",';\n  vertical-align: text-top;\n  margin: 0 4px;\n\n  input[type="checkbox"] {\n    position: absolute;\n    margin-left: -9999px;\n    visibility: hidden;\n\n    // off state\n    & + label {\n      display: inline-grid;\n      box-sizing: border-box;\n      align-items: center;\n      outline: none;\n      user-select: none;\n      width: ',";\n      height: ",";\n      background-color: ",";\n      border-radius: ",';\n      cursor: pointer;\n      transition: background ease-out 0.3s;\n\n      &:before {\n        content: "";\n        display: block;\n        position: absolute;\n        border-radius: ',";\n        width: calc(\n          "," - 2 *\n            ","\n        );\n        height: calc(\n          "," - 2 *\n            ","\n        );\n        background-color: ",";\n        left: ",';\n      }\n\n      &:after {\n        display: block;\n        position: absolute;\n        content: "";\n        width: ',";\n        height: ",";\n        border-radius: ",";\n        background-color: ",";\n        transition: all ease-out 0.4s;\n        margin-left: ",";\n      }\n    }\n\n    // on state\n    &:checked {\n      & + label {\n        background-color: ",";\n\n        &:before {\n          background-color: ",";\n        }\n\n        &:after {\n          margin-left: calc(\n            100% - "," -\n              ","\n          );\n          transition: all ease-out 0.2s;\n          background-color: ",";\n        }\n      }\n\n      &:disabled {\n        & + label {\n          background-color: ",";\n          &:after {\n            box-shadow: none;\n          }\n        }\n      }\n    }\n\n    // disabled\n    &:disabled {\n      & + label {\n        background-color: ",";\n        cursor: default;\n        &:after {\n          box-shadow: none;\n          background-color: ",";\n        }\n      }\n    }\n  }\n"]);return d=function(){return e},e}function c(){var e=u([""]);return c=function(){return e},e}function u(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var h=a.b.label(c()),s=a.b.span(d(),function(e){return e.width||e.theme&&e.theme.width||i.a.width},function(e){return e.height||e.theme&&e.theme.height||i.a.height},function(e){return e.width||e.theme&&e.theme.width||i.a.width},function(e){return e.height||e.theme&&e.theme.height||i.a.height},function(e){return e.borderColor||e.leftBorderColor||e.theme&&e.theme.leftBorderColor||i.a.leftBorderColor},function(e){return e.radius||e.theme&&e.theme.radius||i.a.radius},function(e){return e.radiusBackground||e.theme&&e.theme.radiusBackground||i.a.radiusBackground},function(e){return e.width||e.theme&&e.theme.width||i.a.width},function(e){return e.borderWidth||e.theme&&e.theme.borderWidth||i.a.borderWidth},function(e){return e.height||e.theme&&e.theme.height||i.a.height},function(e){return e.borderWidth||e.theme&&e.theme.borderWidth||i.a.borderWidth},function(e){return e.backgroundColor||e.leftBackgroundColor||e.theme&&e.theme.leftBackgroundColor||i.a.leftBackgroundColor},function(e){return e.borderWidth||e.theme&&e.theme.borderWidth||i.a.borderWidth},function(e){return e.knobWidth||e.theme&&e.theme.knobWidth||i.a.knobWidth},function(e){return e.knobHeight||e.theme&&e.theme.knobHeight||i.a.knobHeight},function(e){return e.knobRadius||e.theme&&e.theme.knobRadius||i.a.knobRadius},function(e){return e.knobColor||e.leftKnobColor||e.theme&&e.theme.leftKnobColor||i.a.leftKnobColor},function(e){return e.knobGap||e.theme&&e.theme.knobGap||i.a.knobGap},function(e){return e.borderColor||e.rightBorderColor||e.theme&&e.theme.rightBorderColor||i.a.rightBorderColor},function(e){return e.backgroundColor||e.rightBackgroundColor||e.theme&&e.theme.rightBackgroundColor||i.a.rightBackgroundColor},function(e){return e.knobWidth||e.theme&&e.theme.knobWidth||i.a.knobWidth},function(e){return e.knobGap||e.theme&&e.theme.knobGap||i.a.knobGap},function(e){return e.knobColor||e.rightKnobColor||e.theme&&e.theme.rightKnobColor||i.a.rightKnobColor},function(e){return e.backgroundColorDisabled||e.theme&&e.theme.backgroundColorDisabled||i.a.backgroundColorDisabled},function(e){return e.backgroundColorDisabled||e.theme&&e.theme.backgroundColorDisabled||i.a.backgroundColorDisabled},function(e){return e.backgroundColorDisabled||e.theme&&e.theme.backgroundColorDisabled||i.a.backgroundColorDisabled}),p=function(e){var n=Object(t.useRef)(null),o=e.className,a=e.name,i=e.checked,d=void 0!==i&&i,c=e.controlled,u=void 0!==c&&c,p=e.disabled,g=void 0!==p&&p,m=e.value,b=void 0===m?"":m,f=e.onToggle,k=void 0===f?function(){return!0}:f,y=e.onRight,C=void 0===y?function(){return!0}:y,x=e.onLeft,T=void 0===x?function(){return!0}:x,w=l(e,["className","name","checked","controlled","disabled","value","onToggle","onRight","onLeft"]),E=["react-toggle",o||""].join(" ");return r.a.createElement(s,Object.assign({className:E},w),r.a.createElement("input",Object.assign({ref:n,onChange:function(e){if(k){k(e);var n=e.target;n&&n.checked?C(e):T(e)}},type:"checkbox",id:a,name:a,value:b,disabled:g},function(e){return e?{checked:d}:{defaultChecked:d}}(u))),r.a.createElement(h,{htmlFor:a}))};n.a=p;try{p.displayName="Toggle",p.__docgenInfo={description:"",displayName:"Toggle",props:{className:{defaultValue:null,description:"Addition classes",name:"className",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"Name of checkbox. You should alway assign a name\n@requires true",name:"name",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Value used when you'll post data",name:"value",required:!1,type:{name:"string"}},checked:{defaultValue:{value:"false"},description:"State of checked",name:"checked",required:!1,type:{name:"boolean"}},controlled:{defaultValue:{value:"false"},description:"Controls whether the checked prop is controlled (passed to the `checked` prop on input) or not (passed to the `defautlChecked` prop on input)",name:"controlled",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"Disable the toogle",name:"disabled",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"Trigged when the toggle change\n@param e",name:"onToggle",required:!1,type:{name:"(e: any) => void"}},onRight:{defaultValue:null,description:"Trigged when the toggle is on the left.",name:"onRight",required:!1,type:{name:"(e: any) => void"}},onLeft:{defaultValue:null,description:"Trigged when the toggle is on the right.",name:"onLeft",required:!1,type:{name:"(e: any) => void"}},width:{defaultValue:null,description:"Width of component",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"Height of component",name:"height",required:!1,type:{name:"string"}},borderWidth:{defaultValue:null,description:"Border width",name:"borderWidth",required:!1,type:{name:"string"}},borderColor:{defaultValue:null,description:"Border color for both knob position. This props will override leftBorderColor and rightBorderColor props",name:"borderColor",required:!1,type:{name:"string"}},leftBorderColor:{defaultValue:null,description:"Border color when the knob is on the left (usually off)",name:"leftBorderColor",required:!1,type:{name:"string"}},rightBorderColor:{defaultValue:null,description:"Border color when the knob is on the right (usually on)",name:"rightBorderColor",required:!1,type:{name:"string"}},backgroundColor:{defaultValue:null,description:"Background color for both knob position. This props will override leftBackgroundColor and rightBackgroundColor props",name:"backgroundColor",required:!1,type:{name:"string"}},leftBackgroundColor:{defaultValue:null,description:"Background color when the knob is on the left (usually off)",name:"leftBackgroundColor",required:!1,type:{name:"string"}},rightBackgroundColor:{defaultValue:null,description:"Background color when the knob is on the right (usually on)",name:"rightBackgroundColor",required:!1,type:{name:"string"}},backgroundColorDisabled:{defaultValue:null,description:"Background color when the toggle is disabled",name:"backgroundColorDisabled",required:!1,type:{name:"string"}},radius:{defaultValue:null,description:"Radius of container",name:"radius",required:!1,type:{name:"string"}},radiusBackground:{defaultValue:null,description:"Radius of gap",name:"radiusBackground",required:!1,type:{name:"string"}},knobRadius:{defaultValue:null,description:"Border radius of knob",name:"knobRadius",required:!1,type:{name:"string"}},knobWidth:{defaultValue:null,description:"Knob width",name:"knobWidth",required:!1,type:{name:"string"}},knobHeight:{defaultValue:null,description:"Knob height",name:"knobHeight",required:!1,type:{name:"string"}},knobGap:{defaultValue:null,description:"Knob gap. It's the distance from the border/background",name:"knobGap",required:!1,type:{name:"string"}},knobColor:{defaultValue:null,description:"Knob color for both knob position. This props will override the leftKnobColor and rightKnobColor",name:"knobColor",required:!1,type:{name:"string"}},leftKnobColor:{defaultValue:null,description:"Knob color when it's on the left (usually off)",name:"leftKnobColor",required:!1,type:{name:"string"}},rightKnobColor:{defaultValue:null,description:"Knob color when it's on the right (usually on)",name:"rightKnobColor",required:!1,type:{name:"string"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Toggle/index.tsx#Toggle"]={docgenInfo:p.__docgenInfo,name:"Toggle",path:"src/components/Toggle/index.tsx#Toggle"})}catch(g){}},"./src/theme/theme.ts":function(e,n,o){"use strict";n.a={version:"1.0.0",width:"48px",height:"24px",borderWidth:"2px",borderColor:"#aaa",leftBorderColor:"#aaa",rightBorderColor:"#3887b7",leftBackgroundColor:"#fff",rightBackgroundColor:"#fff",backgroundColorDisabled:"#eee",radius:"256px",radiusBackground:"256px",knobRadius:"100%",knobWidth:"16px",knobHeight:"16px",knobGap:"4px",knobColor:"#aaa",leftKnobColor:"#aaa",rightKnobColor:"#3887b7"};try{theme.displayName="theme",theme.__docgenInfo={description:"Default theme settings.",displayName:"theme",props:{}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/theme/theme.ts#theme"]={docgenInfo:theme.__docgenInfo,name:"theme",path:"src/theme/theme.ts#theme"})}catch(t){}},"./srcdocs/theming.mdx":function(e,n,o){"use strict";o.r(n);var t=o("./node_modules/react/index.js"),r=o.n(t),a=o("./node_modules/@mdx-js/tag/dist/index.js"),i=o("./node_modules/docz/dist/index.m.js"),l=o("./src/components/Toggle/index.tsx"),d=o("./node_modules/styled-components/dist/styled-components.browser.esm.js"),c=o("./src/theme/theme.ts"),u=function(e){var n=e.children,o=e.theme;return r.a.createElement(d.a,{theme:o||c.a},n)};try{theme.displayName="theme",theme.__docgenInfo={description:"",displayName:"theme",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"any"}}}},"undefined"!==typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/theme/index.tsx#theme"]={docgenInfo:theme.__docgenInfo,name:"theme",path:"src/theme/index.tsx#theme"})}catch(k){}function h(e){return(h="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}function p(e,n){for(var o=0;o<n.length;o++){var t=n[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function g(e,n){return!n||"object"!==h(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function b(e,n){return(b=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}o.d(n,"default",function(){return f});var f=function(e){function n(e){var o;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(o=g(this,m(n).call(this,e))).layout=null,o}var o,t,d;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&b(e,n)}(n,r.a.Component),o=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components,o=s(e,["components"]);return r.a.createElement(a.MDXTag,{name:"wrapper",components:n},r.a.createElement(a.MDXTag,{name:"h1",components:n,props:{id:"theming"}},"Theming"),r.a.createElement(a.MDXTag,{name:"p",components:n},"This new version allow to change the whole toggle appearance. Now you'll be able to change every single color and size, for each single toggle component of for the whole user interface."),r.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"how-change-the-toggle-appearance"}},"How change the toggle appearance"),r.a.createElement(a.MDXTag,{name:"p",components:n},"You may change the toggle appearance in two way: by using the new props for each single instance of your toggle component, or by using a theme provider."),r.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"new-appearance-props"}},"New appearance props"),r.a.createElement(a.MDXTag,{name:"p",components:n},"You may use the new props to change the appearance for a single instance of component"),r.a.createElement(i.e,{__position:0,__code:'<p>Change the background</p>\n<Toggle name="t-1" backgroundColor="rgba(0,0,0,1)" />\n<p>Change the background when on</p>\n<Toggle name="t-2" rightBackgroundColor="tomato" />',__scope:{props:this?this.props:o,Toggle:l.a,ReactToggleThemeProvider:u}},r.a.createElement("p",null,"Change the background"),r.a.createElement(l.a,{name:"t-1",backgroundColor:"rgba(0,0,0,1)"}),r.a.createElement("p",null,"Change the background when on"),r.a.createElement(l.a,{name:"t-2",rightBackgroundColor:"tomato"})),r.a.createElement(a.MDXTag,{name:"p",components:n},"Now you can also change others appearance properties"),r.a.createElement(i.e,{__position:1,__code:'<p>Change the shape</p>\n<Toggle name="t-3" radius="3px" radiusBackground="2px" knobRadius="2px" />\n<p>Change the width size</p>\n<Toggle name="t-4" width="128px" />\n<p>Change the height size</p>\n<Toggle name="t-4h" height="48px" />\n<p>Change the knob size</p>\n<Toggle name="t-5" knobWidth="8px" knobHeight="8px" />\n<Toggle\n  name="t-6"\n  radius="3px"\n  radiusBackground="2px"\n  knobRadius="2px"\n  width="128px"\n  knobWidth="50px"\n/>',__scope:{props:this?this.props:o,Toggle:l.a,ReactToggleThemeProvider:u}},r.a.createElement("p",null,"Change the shape"),r.a.createElement(l.a,{name:"t-3",radius:"3px",radiusBackground:"2px",knobRadius:"2px"}),r.a.createElement("p",null,"Change the width size"),r.a.createElement(l.a,{name:"t-4",width:"128px"}),r.a.createElement("p",null,"Change the height size"),r.a.createElement(l.a,{name:"t-4h",height:"48px"}),r.a.createElement("p",null,"Change the knob size"),r.a.createElement(l.a,{name:"t-5",knobWidth:"8px",knobHeight:"8px"}),r.a.createElement(l.a,{name:"t-6",radius:"3px",radiusBackground:"2px",knobRadius:"2px",width:"128px",knobWidth:"50px"})),r.a.createElement(a.MDXTag,{name:"p",components:n},"You can also change the size and the border"),r.a.createElement(i.e,{__position:2,__code:'<p>Change the border size</p>\n<Toggle name="t-7" borderWidth="1px" />\n<Toggle name="t-8" borderWidth="3px" />\n<Toggle name="t-9" borderWidth="5px" />\n<Toggle name="t-10" borderWidth="5px" knobWidth="8px" knobHeight="8px" />',__scope:{props:this?this.props:o,Toggle:l.a,ReactToggleThemeProvider:u}},r.a.createElement("p",null,"Change the border size"),r.a.createElement(l.a,{name:"t-7",borderWidth:"1px"}),r.a.createElement(l.a,{name:"t-8",borderWidth:"3px"}),r.a.createElement(l.a,{name:"t-9",borderWidth:"5px"}),r.a.createElement(l.a,{name:"t-10",borderWidth:"5px",knobWidth:"8px",knobHeight:"8px"})),r.a.createElement(a.MDXTag,{name:"p",components:n},"Of course, you can set the knob gap"),r.a.createElement(i.e,{__position:3,__code:'<p>Change the border size</p>\n<Toggle name="t-11" borderWidth="1px" knobGap="8px" />\n<Toggle name="t-12" borderWidth="3px" knobGap="8px" />\n<Toggle name="t-13" borderWidth="5px" knobGap="8px" />\n<Toggle\n  name="t-14"\n  borderWidth="5px"\n  knobWidth="8px"\n  knobHeight="8px"\n  knobGap="8px"\n/>',__scope:{props:this?this.props:o,Toggle:l.a,ReactToggleThemeProvider:u}},r.a.createElement("p",null,"Change the border size"),r.a.createElement(l.a,{name:"t-11",borderWidth:"1px",knobGap:"8px"}),r.a.createElement(l.a,{name:"t-12",borderWidth:"3px",knobGap:"8px"}),r.a.createElement(l.a,{name:"t-13",borderWidth:"5px",knobGap:"8px"}),r.a.createElement(l.a,{name:"t-14",borderWidth:"5px",knobWidth:"8px",knobHeight:"8px",knobGap:"8px"})),r.a.createElement(a.MDXTag,{name:"h2",components:n,props:{id:"theme-provider"}},"Theme Provider"),r.a.createElement(a.MDXTag,{name:"p",components:n},"Instead of change every single props, you might use the ",r.a.createElement(a.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"ReactToggleThemeProvider")),r.a.createElement(a.MDXTag,{name:"pre",components:n},r.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},'import {ReactToggleThemeProvider} from "react-toggle-component";\n')),r.a.createElement(a.MDXTag,{name:"p",components:n},"The current default theme is the following"),r.a.createElement(a.MDXTag,{name:"pre",components:n},r.a.createElement(a.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},'export default {\n  version: "1.0.0",\n  width: "48px",\n  height: "24px",\n\n  borderWidth: "2px",\n  borderColor: "#aaa",\n  leftBorderColor: "#aaa",\n  rightBorderColor: "#3887b7",\n\n  leftBackgroundColor : "#fff",\n  rightBackgroundColor : "#fff",\n  backgroundColorDisabled : "#eee",\n\n  radius : "256px",\n  radiusBackground : "256px",\n  knobRadius : "100%",\n\n  knobWidth : "16px",\n  knobHeight : "16px",\n  knobGap: "4px",\n\n  knobColor: "#aaa",\n  leftKnobColor: "#aaa",\n  rightKnobColor: "#3887b7",\n};\n')),r.a.createElement(i.e,{__position:4,__code:'<ReactToggleThemeProvider theme={{ leftBackgroundColor: \'tomato\' }}>\n  <div>\n    <p>All toggle children will use the same theme</p>\n    <Toggle name="t-p1" />\n    <Toggle name="t-p2" />\n    <Toggle name="t-p3" />\n    <Toggle name="t-p4" />\n  </div>\n</ReactToggleThemeProvider>',__scope:{props:this?this.props:o,Toggle:l.a,ReactToggleThemeProvider:u}},r.a.createElement(u,{theme:{leftBackgroundColor:"tomato"}},r.a.createElement("div",null,r.a.createElement("p",null,"All toggle children will use the same theme"),r.a.createElement(l.a,{name:"t-p1"}),r.a.createElement(l.a,{name:"t-p2"}),r.a.createElement(l.a,{name:"t-p3"}),r.a.createElement(l.a,{name:"t-p4"})))),r.a.createElement(a.MDXTag,{name:"p",components:n},"As you can see from the above example, you don't need to write your own custome theme with all properties, you may override one or more properties."))}}])&&p(o.prototype,t),d&&p(o,d),n}()}}]);
//# sourceMappingURL=srcdocs-theming.5bc16802e130d52f00b0.js.map